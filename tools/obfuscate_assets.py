#!/usr/bin/env python3
"""
–û–±—Ñ—É—Å–∫–∞—Ü–∏—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –≤ assets:
- –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –≤ —Ö–µ—à–∏ (a1b2c3.png)
- –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ —Ñ–∞–π–ª –¥–ª—è game.js
- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –∑–∞–º–µ–Ω—ã –ø—É—Ç–µ–π
"""
import hashlib
import json
from pathlib import Path

def generate_hash(filename):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π —Ö–µ—à –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞"""
    return hashlib.md5(filename.encode()).hexdigest()[:8]

def create_asset_mapping(assets_dir):
    """–°–æ–∑–¥–∞–µ—Ç –º–∞–ø–ø–∏–Ω–≥ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω –Ω–∞ –æ–±—Ñ—É—Å—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ"""
    mapping = {}
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    for ext in ['*.png', '*.webp']:
        for file_path in Path(assets_dir).glob(ext):
            if file_path.stem == 'texture':  # texture.png –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
                continue
            
            original_name = f"assets/{file_path.name}"
            obfuscated_name = generate_hash(file_path.stem) + file_path.suffix
            mapping[original_name] = f"assets/{obfuscated_name}"
    
    return mapping

def generate_js_code(mapping):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç JavaScript –∫–æ–¥ —Å –º–∞–ø–ø–∏–Ω–≥–æ–º"""
    json_mapping = json.dumps(mapping, indent=2, ensure_ascii=False)
    
    code = f"""/* ---------- Asset mapping (obfuscated filenames) ---------- */
const __assetMap = {json_mapping};

function getAssetPath(originalPath) {{
  return __assetMap[originalPath] || originalPath;
}}
"""
    return code

if __name__ == "__main__":
    assets_dir = Path(__file__).parent.parent / "assets"
    
    if not assets_dir.exists():
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {assets_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        exit(1)
    
    print("üîí –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–∞ –¥–ª—è –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏...")
    mapping = create_asset_mapping(assets_dir)
    
    print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ {len(mapping)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏")
    print("\n–ü—Ä–∏–º–µ—Ä—ã:")
    for i, (orig, obf) in enumerate(list(mapping.items())[:5]):
        print(f"  {orig} ‚Üí {obf}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º JS –∫–æ–¥
    js_code = generate_js_code(mapping)
    output_file = Path(__file__).parent / "asset_mapping.js"
    output_file.write_text(js_code)
    
    print(f"\n‚úÖ –ú–∞–ø–ø–∏–Ω–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {output_file}")
    print("\nüí° –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –Ω–∞—á–∞–ª–æ game.js –∏ –æ–±–µ—Ä–Ω–∏—Ç–µ –≤—Å–µ –≤—ã–∑–æ–≤—ã:")
    print("   changeScene(getAssetPath('assets/background-office.png'))")
